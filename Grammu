-- COCO HUB | Delta Full Version | ArrayField UI
-- Supports: KRNL / Delta / Xeno
-- Features: WalkSpeed, Jump, Fly, Invisible, ESP, Aimbot, Silent Aim, Hitbox, FOV

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- ================= State =================
local State = {
    Aimbot=false, SilentAim=false,
    Hitbox=false, Invisible=false,
    Fly=false, FlySpeed=40,
    WalkSpeed=16, JumpPower=50,
    AimbotPart="Head",
    FOVRadius=120, FOVRainbow=false,  -- false ตอนเริ่ม
    ESP=true, TargetESP=true,
    HitboxSize=10
}

-- ================= Helpers =================
local safeDrawing = {}
do
    local ok, DrawingLib = pcall(function() return Drawing end)
    safeDrawing.available = ok and DrawingLib~=nil
end

local function newDrawing(kind, props)
    if not safeDrawing.available then return nil end
    local ok,obj = pcall(function() return Drawing.new(kind) end)
    if not ok or not obj then return nil end
    if props then
        for k,v in pairs(props) do pcall(function() obj[k]=v end) end
    end
    return obj
end

-- ================= ArrayField UI =================
local ArrayField = loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AArrayfield%20Library"))()
local Window = ArrayField:CreateWindow({Name="COCO HUB | Delta Pro Ultimate", Size=Vector2.new(300,400)})

-- Tabs
local CombatTab = Window:CreateTab("Combat")
local MoveTab = Window:CreateTab("Movement")
local ESPTab = Window:CreateTab("ESP")
local MiscTab = Window:CreateTab("Misc")

-- ================= Combat =================
CombatTab:CreateToggle({
    Name="Aimbot",
    CurrentValue=false,
    Callback=function(v) State.Aimbot=v end
})
CombatTab:CreateToggle({
    Name="Silent Aim",
    CurrentValue=false,
    Callback=function(v) State.SilentAim=v end
})
CombatTab:CreateSlider({
    Name="Hitbox Size",
    Range={10,500},
    Increment=1,
    CurrentValue=State.HitboxSize,
    Callback=function(v) State.HitboxSize=v end
})
CombatTab:CreateDropdown({
    Name="Aimbot Part",
    Options={"Head","HumanoidRootPart"},
    CurrentOption=State.AimbotPart,
    Callback=function(v) State.AimbotPart=v end
})
CombatTab:CreateSlider({
    Name="FOV Radius",
    Range={50,1000},
    Increment=1,
    CurrentValue=State.FOVRadius,
    Callback=function(v) State.FOVRadius=v end
})
CombatTab:CreateToggle({
    Name="Rainbow FOV",
    CurrentValue=false,
    Callback=function(v) State.FOVRainbow=v end
})

-- ================= Movement =================
MoveTab:CreateSlider({
    Name="WalkSpeed",
    Range={16,200},
    Increment=1,
    CurrentValue=State.WalkSpeed,
    Callback=function(v) State.WalkSpeed=v end
})
MoveTab:CreateSlider({
    Name="JumpPower",
    Range={50,300},
    Increment=1,
    CurrentValue=State.JumpPower,
    Callback=function(v) State.JumpPower=v end
})
MoveTab:CreateToggle({
    Name="Fly",
    CurrentValue=false,
    Callback=function(v) State.Fly=v end
})
MoveTab:CreateSlider({
    Name="Fly Speed",
    Range={10,200},
    Increment=1,
    CurrentValue=State.FlySpeed,
    Callback=function(v) State.FlySpeed=v end
})

-- ================= ESP =================
ESPTab:CreateToggle({
    Name="Enable ESP",
    CurrentValue=true,
    Callback=function(v) State.ESP=v end
})
ESPTab:CreateToggle({
    Name="Target ESP",
    CurrentValue=true,
    Callback=function(v) State.TargetESP=v end
})

-- ================= Misc =================
MiscTab:CreateToggle({
    Name="Invisible",
    CurrentValue=false,
    Callback=function(v) State.Invisible=v end
})

-- ================= Hotkey =================
UIS.InputBegan:Connect(function(input,gp)
    if gp then return end
    if input.KeyCode==Enum.KeyCode.RightShift then
        Window:Toggle()
    end
end)

-- ================= Invisible =================
local InvisibleStore = {}
local function applyInvisible(char)
    if not char or InvisibleStore[char] then return end
    InvisibleStore[char]={}
    for _,part in pairs(char:GetChildren()) do
        if part:IsA("BasePart") then
            InvisibleStore[char][part]={Transparency=part.Transparency,CanCollide=part.CanCollide}
            pcall(function() part.Transparency=1; part.CanCollide=false end)
        elseif part:IsA("Accessory") then
            local handle = part:FindFirstChildWhichIsA("BasePart")
            if handle then
                InvisibleStore[char][handle]={Transparency=handle.Transparency,CanCollide=handle.CanCollide}
                pcall(function() handle.Transparency=1; handle.CanCollide=false end)
            end
        end
    end
end
local function restoreInvisible(char)
    if not char or not InvisibleStore[char] then return end
    for part,props in pairs(InvisibleStore[char]) do
        if part and part.Parent then
            pcall(function() part.Transparency=props.Transparency; part.CanCollide=props.CanCollide end)
        end
    end
    InvisibleStore[char]=nil
end
local lastInvisible=false
RunService.Heartbeat:Connect(function()
    if State.Invisible~=lastInvisible then
        lastInvisible=State.Invisible
        if State.Invisible and LocalPlayer.Character then
            applyInvisible(LocalPlayer.Character)
        elseif LocalPlayer.Character then
            restoreInvisible(LocalPlayer.Character)
        end
    end
end)
LocalPlayer.CharacterAdded:Connect(function(ch)
    if State.Invisible then applyInvisible(ch) end
end)

-- ================= ESP + FOV + Targeting =================
local ESPObjects={}
local FOVCircle=nil
if safeDrawing.available then
    FOVCircle=newDrawing("Circle",{Color=Color3.fromRGB(0,255,255), Thickness=2, Filled=false, Visible=true, Radius=State.FOVRadius})
end

local CurrentTarget=nil
RunService.RenderStepped:Connect(function()
    local vw,vh = Camera.ViewportSize.X, Camera.ViewportSize.Y

    if FOVCircle then
        if State.FOVRainbow then
            local hue=(tick()%5)/5
            pcall(function() FOVCircle.Color=Color3.fromHSV(hue,1,1) end)
        end
        pcall(function() FOVCircle.Position=Vector2.new(vw/2,vh/2); FOVCircle.Radius=State.FOVRadius end)
    end

    local char=LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local hrp=char.HumanoidRootPart
        local hum=char:FindFirstChildOfClass("Humanoid")
        if hum then pcall(function() hum.WalkSpeed=State.WalkSpeed; hum.JumpPower=State.JumpPower end) end

        if State.Fly then
            local camCF=Camera.CFrame
            local moveDir=Vector3.new()
            if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir=moveDir+camCF.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir=moveDir-camCF.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir=moveDir-camCF.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir=moveDir+camCF.RightVector end
            if moveDir.Magnitude>0 then
                pcall(function() hrp.Velocity=moveDir.Unit*State.FlySpeed end)
            else
                pcall(function() hrp.Velocity=Vector3.new(0,0,0) end)
            end
        end
    end

    -- Hitbox expand
    if State.Hitbox then
        for _,p in pairs(Players:GetPlayers()) do
            if p~=LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                pcall(function() p.Character.HumanoidRootPart.Size=Vector3.new(State.HitboxSize,State.HitboxSize,State.HitboxSize) end)
            end
        end
    end

    -- Acquire target for Aimbot / SilentAim
    CurrentTarget=nil
    if State.Aimbot or State.SilentAim then
        local best=State.FOVRadius
        for _,p in pairs(Players:GetPlayers()) do
            if p~=LocalPlayer and p.Character and p.Character:FindFirstChild(State.AimbotPart) then
                local pos3=p.Character[State.AimbotPart].Position
                local sp,onScreen=Camera:WorldToViewportPoint(pos3)
                if onScreen then
                    local d=(Vector2.new(sp.X,sp.Y)-Vector2.new(vw/2,vh/2)).Magnitude
                    if d<best then
                        best=d
                        CurrentTarget=p
                    end
                end
            end
        end
    end
end)

-- ================= Silent Aim Hook (Simple) =================
local mt=getrawmetatable(game)
local oldNamecall=mt.__namecall
local oldIndex=mt.__index
setreadonly(mt,false)
mt.__namecall=newcclosure(function(self,...)
    local method=getnamecallmethod()
    local args={...}
    if (tostring(method)=="FireServer") and CurrentTarget and State.SilentAim then
        if args[2] and typeof(args[2])=="Vector3" then
            -- Redirect bullet to target part
            if CurrentTarget.Character and CurrentTarget.Character:FindFirstChild(State.AimbotPart) then
                args[2]=CurrentTarget.Character[State.AimbotPart].Position
            end
            return oldNamecall(self,unpack(args))
        end
    end
    return oldNamecall(self,...)
end)
setreadonly(mt,true)

print("COCO HUB Loaded | ArrayField UI | Silent Aim + Rainbow FOV Toggle Fixed")
