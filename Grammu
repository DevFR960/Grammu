-- COCO HUB | Delta Full Version | ArrayField UI
-- Features: Aimbot, SilentAim, ESP, Self Hand Hitbox (visual only, adjustable), Movement, Fly, Invisible

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- ================= State =================
local State = {
    -- Combat
    Aimbot=false,
    SilentAim=false,
    AimbotPart="Head",
    FOVRadius=120,
    FOVRainbow=false,

    -- ESP / Hitbox
    ESP=false,
    TargetESP=false,
    ESPColor=Color3.fromRGB(255,0,0),

    -- Self hand hitbox (visual only)
    SelfHandHitbox=false,
    HandTarget="Both",
    HandHitboxColor=Color3.fromRGB(0,255,0),
    HandHitboxSize=20, -- new slider

    -- Movement
    WalkSpeed=16,
    JumpPower=50,
    Fly=false,
    FlySpeed=40,
    NoClip=false,

    -- Misc
    Invisible=false
}

-- ================= Helpers =================
local safeDrawing = {}
do
    local ok, DrawingLib = pcall(function() return Drawing end)
    safeDrawing.available = ok and DrawingLib~=nil
end
local function newDrawing(kind, props)
    if not safeDrawing.available then return nil end
    local ok,obj = pcall(function() return Drawing.new(kind) end)
    if not ok or not obj then return nil end
    if props then for k,v in pairs(props) do pcall(function() obj[k]=v end) end end
    return obj
end
local function worldToScreenVec(pos)
    local x,y,z = Camera:WorldToViewportPoint(pos)
    return Vector2.new(x,y), z>0
end

-- ================= ArrayField UI =================
local ArrayField = loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AArrayfield%20Library"))()
local Window = ArrayField:CreateWindow({ Name="COCO HUB | Delta Pro Ultimate", LoadingTitle="COCO HUB Loading", ConfigurationSaving={Enabled=true,FileName="COCO_HUB_Delta"}, KeySystem=false })

local CombatTab = Window:CreateTab("Combat")
local MoveTab = Window:CreateTab("Movement")
local ESPTab = Window:CreateTab("ESP")
local MiscTab = Window:CreateTab("Misc")

-- ================= UI Elements =================
-- Combat
CombatTab:CreateToggle({Name="Aimbot", CurrentValue=State.Aimbot, Callback=function(v) State.Aimbot=v end})
CombatTab:CreateToggle({Name="Silent Aim", CurrentValue=State.SilentAim, Callback=function(v) State.SilentAim=v end})
CombatTab:CreateDropdown({Name="Aimbot Part", Options={"Head","HumanoidRootPart"}, CurrentOption=State.AimbotPart, MultiSelection=false, Callback=function(v) State.AimbotPart=v end})
CombatTab:CreateSlider({Name="FOV Radius", Range={50,1000}, Increment=1, CurrentValue=State.FOVRadius, Callback=function(v) State.FOVRadius=v end})
CombatTab:CreateToggle({Name="Rainbow FOV", CurrentValue=State.FOVRainbow, Callback=function(v) State.FOVRainbow=v end})

-- Self hand hitbox visual
CombatTab:CreateToggle({Name="Self Hand Hitbox", CurrentValue=State.SelfHandHitbox, Callback=function(v) State.SelfHandHitbox=v end})
CombatTab:CreateDropdown({Name="Hand Target", Options={"Both","Right","Left"}, CurrentOption=State.HandTarget, Callback=function(v) State.HandTarget=v end})
CombatTab:CreateColorPicker({Name="Hand Hitbox Color", Color=State.HandHitboxColor, Callback=function(v) State.HandHitboxColor=v end})
CombatTab:CreateSlider({Name="Hand Hitbox Size", Range={5,100}, Increment=1, CurrentValue=State.HandHitboxSize, Callback=function(v) State.HandHitboxSize=v end})

-- Movement
MoveTab:CreateSlider({Name="WalkSpeed", Range={16,200}, Increment=1, CurrentValue=State.WalkSpeed, Callback=function(v) State.WalkSpeed=v end})
MoveTab:CreateSlider({Name="JumpPower", Range={50,300}, Increment=1, CurrentValue=State.JumpPower, Callback=function(v) State.JumpPower=v end})
MoveTab:CreateToggle({Name="Fly", CurrentValue=State.Fly, Callback=function(v) State.Fly=v end})
MoveTab:CreateSlider({Name="Fly Speed", Range={10,200}, Increment=1, CurrentValue=State.FlySpeed, Callback=function(v) State.FlySpeed=v end})
MoveTab:CreateToggle({Name="NoClip", CurrentValue=State.NoClip, Callback=function(v) State.NoClip=v end})

-- ESP / Misc
ESPTab:CreateToggle({Name="Enable ESP", CurrentValue=State.ESP, Callback=function(v) State.ESP=v end})
ESPTab:CreateToggle({Name="Target ESP", CurrentValue=State.TargetESP, Callback=function(v) State.TargetESP=v end})
ESPTab:CreateColorPicker({Name="ESP Color", Color=State.ESPColor, Callback=function(v) State.ESPColor=v end})
MiscTab:CreateToggle({Name="Invisible", CurrentValue=State.Invisible, Callback=function(v) State.Invisible=v end})

-- GUI Hotkey
UIS.InputBegan:Connect(function(input,gp)
    if gp then return end
    if input.KeyCode==Enum.KeyCode.RightShift then Window:Toggle() end
end)

-- ================= Movement / Fly =================
local FlyControllers = {}
local function enableFly(char)
    if not char or FlyControllers[char] then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e5,1e5,1e5)
    bv.P = 1250
    bv.Velocity = Vector3.new(0,0,0)
    bv.Parent = hrp
    local bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
    bg.P = 3000
    bg.CFrame = hrp.CFrame
    bg.Parent = hrp
    FlyControllers[char] = {BV=bv,BG=bg}
end
local function disableFly(char)
    if not char or not FlyControllers[char] then return end
    pcall(function() FlyControllers[char].BV:Destroy(); FlyControllers[char].BG:Destroy() end)
    FlyControllers[char]=nil
end

RunService.Heartbeat:Connect(function()
    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then pcall(function() hum.WalkSpeed = State.WalkSpeed; hum.JumpPower = State.JumpPower end) end

        -- Fly
        if State.Fly then
            enableFly(char)
            local ctrl = FlyControllers[char]
            if ctrl and ctrl.BV then
                local camCF = Camera.CFrame
                local dir = Vector3.new()
                if UIS:IsKeyDown(Enum.KeyCode.W) then dir = dir + camCF.LookVector end
                if UIS:IsKeyDown(Enum.KeyCode.S) then dir = dir - camCF.LookVector end
                if UIS:IsKeyDown(Enum.KeyCode.A) then dir = dir - camCF.RightVector end
                if UIS:IsKeyDown(Enum.KeyCode.D) then dir = dir + camCF.RightVector end
                if UIS:IsKeyDown(Enum.KeyCode.Space) then dir = dir + Vector3.new(0,1,0) end
                if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then dir = dir - Vector3.new(0,1,0) end
                ctrl.BV.Velocity = dir.Magnitude>0 and dir.Unit*State.FlySpeed or Vector3.new(0,0,0)
                ctrl.BG.CFrame = Camera.CFrame
            end
        else disableFly(char) end

        -- NoClip
        if State.NoClip then
            for _,p in pairs(char:GetDescendants()) do
                if p:IsA("BasePart") then p.CanCollide=false end
            end
        end
    end
end)

-- ================= Invisible =================
local InvisibleStore = {}
local function applyInvisible(char)
    if not char or InvisibleStore[char] then return end
    InvisibleStore[char]={}
    for _,part in pairs(char:GetChildren()) do
        if part:IsA("BasePart") then
            InvisibleStore[char][part]={Transparency=part.Transparency,CanCollide=part.CanCollide}
            part.Transparency=1; part.CanCollide=false
        elseif part:IsA("Accessory") then
            local handle = part:FindFirstChildWhichIsA("BasePart")
            if handle then
                InvisibleStore[char][handle]={Transparency=handle.Transparency,CanCollide=handle.CanCollide}
                handle.Transparency=1; handle.CanCollide=false
            end
        end
    end
end
local function restoreInvisible(char)
    if not char or not InvisibleStore[char] then return end
    for part,props in pairs(InvisibleStore[char]) do
        if part and part.Parent then part.Transparency=props.Transparency; part.CanCollide=props.CanCollide end
    end
    InvisibleStore[char]=nil
end
RunService.Heartbeat:Connect(function()
    if LocalPlayer.Character then
        if State.Invisible then applyInvisible(LocalPlayer.Character)
        else restoreInvisible(LocalPlayer.Character) end
    end
end)
LocalPlayer.CharacterAdded:Connect(function(ch) if State.Invisible then applyInvisible(ch) end end)

-- ================= Self Hand Hitbox Visual =================
local HandESP = {}
RunService.RenderStepped:Connect(function()
    local ch = LocalPlayer.Character
    if not ch or not safeDrawing.available then return end

    local hands = {}
    if State.HandTarget=="Both" or State.HandTarget=="Right" then table.insert(hands,"RightHand") end
    if State.HandTarget=="Both" or State.HandTarget=="Left" then table.insert(hands,"LeftHand") end

    for _,hname in pairs(hands) do
        local part = ch:FindFirstChild(hname)
        if part then
            if not HandESP[hname] then
                HandESP[hname] = newDrawing("Square",{Color=State.HandHitboxColor,Thickness=2,Filled=false,Visible=false})
            end
            local pos,onScreen = worldToScreenVec(part.Position)
            if onScreen then
                local size = Vector2.new(State.HandHitboxSize,State.HandHitboxSize)
                pcall(function()
                    HandESP[hname].Position = Vector2.new(pos.X-size.X/2,pos.Y-size.Y/2)
                    HandESP[hname].Size = size
                    HandESP[hname].Color = State.HandHitboxColor
                    HandESP[hname].Visible = State.SelfHandHitbox
                end)
            else HandESP[hname].Visible=false end
        end
    end
end)
