-- COCO HUB | Delta Full Version | ArrayField UI
-- Supports: KRNL / Delta / Xeno

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- ================= State =================
local State = {
    Aimbot=false, SilentAim=false,
    Hitbox=false, Invisible=false,
    Fly=false, FlySpeed=40,
    WalkSpeed=16, JumpPower=50,
    AimbotPart="Head",
    FOVRadius=120, FOVRainbow=true,
    ESP=true, TargetESP=true,
    HitboxSize=10
}

-- ================= Helpers =================
local safeDrawing = {}
do
    local ok, DrawingLib = pcall(function() return Drawing end)
    safeDrawing.available = ok and DrawingLib~=nil
end

local function newDrawing(kind, props)
    if not safeDrawing.available then return nil end
    local ok,obj = pcall(function() return Drawing.new(kind) end)
    if not ok or not obj then return nil end
    if props then
        for k,v in pairs(props) do pcall(function() obj[k]=v end) end
    end
    return obj
end

-- ================= ArrayField UI =================
local ArrayField = loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AArrayfield%20Library"))()
local Window = ArrayField:CreateWindow({Name="COCO HUB | Delta Pro Ultimate", Size=Vector2.new(350,500)})

-- ================= Tabs =================
local CombatTab = Window:CreateTab("Combat")
local MoveTab = Window:CreateTab("Movement")
local ESPTab = Window:CreateTab("ESP")
local MiscTab = Window:CreateTab("Misc")

-- ================= Combat =================
CombatTab:CreateToggle("Aimbot", false, function(v) State.Aimbot=v end)
CombatTab:CreateToggle("Silent Aim", false, function(v) State.SilentAim=v end)
CombatTab:CreateSlider("Hitbox Size", 10, 500, 1, State.HitboxSize, function(v) State.HitboxSize=v end)
CombatTab:CreateDropdown("Aimbot Part", {"Head","HumanoidRootPart"}, State.AimbotPart, function(v) State.AimbotPart=v end)
CombatTab:CreateSlider("FOV Radius", 50, 1000, 1, State.FOVRadius, function(v) State.FOVRadius=v end)
CombatTab:CreateToggle("Rainbow FOV", true, function(v) State.FOVRainbow=v end)

-- ================= Movement =================
MoveTab:CreateSlider("WalkSpeed", 16, 200, 1, State.WalkSpeed, function(v) State.WalkSpeed=v end)
MoveTab:CreateSlider("JumpPower", 50, 300, 1, State.JumpPower, function(v) State.JumpPower=v end)
MoveTab:CreateToggle("Fly", false, function(v) State.Fly=v end)
MoveTab:CreateSlider("Fly Speed", 10, 200, 1, State.FlySpeed, function(v) State.FlySpeed=v end)

-- ================= ESP =================
ESPTab:CreateToggle("Enable ESP", true, function(v) State.ESP=v end)
ESPTab:CreateToggle("Target ESP", true, function(v) State.TargetESP=v end)

-- ================= Misc =================
MiscTab:CreateToggle("Invisible", false, function(v) State.Invisible=v end)

-- ================= Hotkey to Toggle UI =================
UIS.InputBegan:Connect(function(input,gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        Window:Toggle()
    end
end)

-- ================= Invisible =================
local InvisibleStore = {}

local function applyInvisible(char)
    if not char or InvisibleStore[char] then return end
    InvisibleStore[char] = {}
    for _,part in pairs(char:GetChildren()) do
        if part:IsA("BasePart") then
            InvisibleStore[char][part]={Transparency=part.Transparency,CanCollide=part.CanCollide}
            pcall(function() part.Transparency=1; part.CanCollide=false end)
        elseif part:IsA("Accessory") then
            local handle = part:FindFirstChildWhichIsA("BasePart")
            if handle then
                InvisibleStore[char][handle]={Transparency=handle.Transparency,CanCollide=handle.CanCollide}
                pcall(function() handle.Transparency=1; handle.CanCollide=false end)
            end
        end
    end
end

local function restoreInvisible(char)
    if not char or not InvisibleStore[char] then return end
    for part,props in pairs(InvisibleStore[char]) do
        if part and part.Parent then
            pcall(function() part.Transparency=props.Transparency; part.CanCollide=props.CanCollide end)
        end
    end
    InvisibleStore[char] = nil
end

local lastInvisible = false
RunService.Heartbeat:Connect(function()
    if State.Invisible ~= lastInvisible then
        lastInvisible = State.Invisible
        if State.Invisible then
            if LocalPlayer.Character then applyInvisible(LocalPlayer.Character) end
        else
            if LocalPlayer.Character then restoreInvisible(LocalPlayer.Character) end
        end
    end
end)

LocalPlayer.CharacterAdded:Connect(function(ch)
    if State.Invisible then applyInvisible(ch) end
end)

-- ================= ESP + FOV + Targeting =================
local ESPObjects = {}
local FOVCircle = safeDrawing.available and newDrawing("Circle",{Color=Color3.fromRGB(0,255,255),Thickness=2,Filled=false,Visible=true,Radius=State.FOVRadius}) or nil
local CurrentTarget = nil

RunService.RenderStepped:Connect(function()
    local vw,vh = Camera.ViewportSize.X, Camera.ViewportSize.Y

    if FOVCircle then
        if State.FOVRainbow then
            local hue = (tick()%5)/5
            pcall(function() FOVCircle.Color = Color3.fromHSV(hue,1,1) end)
        end
        pcall(function() FOVCircle.Position = Vector2.new(vw/2,vh/2); FOVCircle.Radius = State.FOVRadius end)
    end

    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local hrp = char.HumanoidRootPart
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then pcall(function() hum.WalkSpeed = State.WalkSpeed; hum.JumpPower = State.JumpPower end) end

        if State.Fly then
            local camCF = Camera.CFrame
            local moveDir = Vector3.new()
            if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + camCF.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - camCF.LookVector end
            if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - camCF.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + camCF.RightVector end
            if moveDir.Magnitude > 0 then
                pcall(function() hrp.Velocity = moveDir.Unit * State.FlySpeed end)
            else
                pcall(function() hrp.Velocity = Vector3.new(0,0,0) end)
            end
        end
    end

    -- Hitbox
    if State.Hitbox then
        for _,p in pairs(Players:GetPlayers()) do
            if p~=LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                pcall(function() p.Character.HumanoidRootPart.Size = Vector3.new(State.HitboxSize,State.HitboxSize,State.HitboxSize) end)
            end
        end
    end

    -- Acquire target
    CurrentTarget = nil
    if State.Aimbot or State.SilentAim then
        local best = State.FOVRadius
        for _,p in pairs(Players:GetPlayers()) do
            if p~=LocalPlayer and p.Character and p.Character:FindFirstChild(State.AimbotPart) then
                local pos3 = p.Character[State.AimbotPart].Position
                local sp,onScreen = Camera:WorldToViewportPoint(pos3)
                if onScreen then
                    local d = (Vector2.new(sp.X,sp.Y) - Vector2.new(vw/2,vh/2)).Magnitude
                    if d < best then
                        best = d
                        CurrentTarget = p
                    end
                end
            end
        end
    end

    -- ESP update
    if State.ESP then
        for _,p in pairs(Players:GetPlayers()) do
            if p~=LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                local box = ESPObjects[p] or newDrawing("Square",{Color=Color3.fromRGB(255,0,0),Thickness=2,Filled=false,Visible=false})
                ESPObjects[p] = box
                local sp,onScreen = Camera:WorldToViewportPoint(p.Character.HumanoidRootPart.Position)
                if onScreen then
                    pcall(function()
                        box.Position = Vector2.new(sp.X-25, sp.Y-25)
                        box.Size = Vector2.new(50,50)
                        box.Visible = true
                        if State.TargetESP and CurrentTarget then
                            box.Color = (p==CurrentTarget) and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
                        else
                            box.Color = Color3.fromRGB(255,0,0)
                        end
                    end)
                else
                    pcall(function() box.Visible=false end)
                end
            end
        end
    else
        for _,box in pairs(ESPObjects) do pcall(function() box.Visible=false end) end
    end
end)

print("COCO HUB Loaded | ArrayField UI | Full Features")
